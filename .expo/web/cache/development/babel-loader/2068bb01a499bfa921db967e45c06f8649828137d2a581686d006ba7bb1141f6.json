{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TaskDetailsScreen = function TaskDetailsScreen(_ref) {\n  var route = _ref.route;\n  var taskId = route.params.taskId;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    task = _useState2[0],\n    setTask = _useState2[1];\n  useEffect(function () {\n    var fetchTask = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var tasks = yield AsyncStorage.getItem(\"tasks\");\n          var taskArray = JSON.parse(tasks) || [];\n          var selectedTask = taskArray.find(function (item) {\n            return item.id === taskId;\n          });\n          setTask(selectedTask);\n        } catch (error) {\n          console.error(\"Erro ao buscar detalhes da tarefa: \", error);\n        }\n      });\n      return function fetchTask() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchTask();\n  }, [taskId]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Detalhes da Tarefa\"\n    }), task ? _jsxs(View, {\n      style: styles.taskDetails,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"ID da Tarefa:\"\n      }), _jsx(Text, {\n        style: styles.text,\n        children: task.id\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"T\\xEDtulo:\"\n      }), _jsx(Text, {\n        style: styles.text,\n        children: task.title\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Descri\\xE7\\xE3o:\"\n      }), _jsx(Text, {\n        style: styles.text,\n        children: task.description\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Data e Hora:\"\n      }), _jsx(Text, {\n        style: styles.text,\n        children: new Date(task.date).toLocaleString()\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Situa\\xE7\\xE3o:\"\n      }), _jsx(Text, {\n        style: styles.text,\n        children: task.status\n      })]\n    }) : _jsx(Text, {\n      style: styles.noTask,\n      children: \"Detalhes da tarefa n\\xE3o encontrados\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20\n  },\n  taskDetails: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    padding: 15,\n    elevation: 5,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 3,\n    marginBottom: 20\n  },\n  label: {\n    fontWeight: \"bold\",\n    fontSize: 16,\n    marginBottom: 5\n  },\n  text: {\n    fontSize: 16,\n    marginBottom: 10\n  },\n  noTask: {\n    fontSize: 18,\n    color: \"gray\"\n  }\n});\nexport default TaskDetailsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","AsyncStorage","jsx","_jsx","jsxs","_jsxs","TaskDetailsScreen","_ref","route","taskId","params","_useState","_useState2","_slicedToArray","task","setTask","fetchTask","_ref2","_asyncToGenerator","tasks","getItem","taskArray","JSON","parse","selectedTask","find","item","id","error","console","apply","arguments","style","styles","container","children","title","taskDetails","label","text","description","Date","date","toLocaleString","status","noTask","create","flex","padding","fontSize","fontWeight","marginBottom","backgroundColor","borderRadius","elevation","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","color"],"sources":["C:/Users/sofia/react_async/src/screens/DetailsScreen.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst TaskDetailsScreen = ({ route }) => {\r\n  const { taskId } = route.params;\r\n  const [task, setTask] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchTask = async () => {\r\n      try {\r\n        const tasks = await AsyncStorage.getItem(\"tasks\");\r\n        const taskArray = JSON.parse(tasks) || [];\r\n\r\n        const selectedTask = taskArray.find((item) => item.id === taskId);\r\n        setTask(selectedTask);\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar detalhes da tarefa: \", error);\r\n      }\r\n    };\r\n\r\n    fetchTask();\r\n  }, [taskId]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Detalhes da Tarefa</Text>\r\n      {task ? (\r\n        <View style={styles.taskDetails}>\r\n          <Text style={styles.label}>ID da Tarefa:</Text>\r\n          <Text style={styles.text}>{task.id}</Text>\r\n          <Text style={styles.label}>Título:</Text>\r\n          <Text style={styles.text}>{task.title}</Text>\r\n          <Text style={styles.label}>Descrição:</Text>\r\n          <Text style={styles.text}>{task.description}</Text>\r\n          <Text style={styles.label}>Data e Hora:</Text>\r\n          <Text style={styles.text}>\r\n            {new Date(task.date).toLocaleString()}\r\n          </Text>\r\n          <Text style={styles.label}>Situação:</Text>\r\n          <Text style={styles.text}>{task.status}</Text>\r\n        </View>\r\n      ) : (\r\n        <Text style={styles.noTask}>Detalhes da tarefa não encontrados</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 20,\r\n  },\r\n  taskDetails: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    elevation: 5,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 3,\r\n    marginBottom: 20,\r\n  },\r\n  label: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 16,\r\n    marginBottom: 5,\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  noTask: {\r\n    fontSize: 18,\r\n    color: \"gray\",\r\n  },\r\n});\r\n\r\nexport default TaskDetailsScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEnD,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErE,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EAChC,IAAQC,MAAM,GAAKD,KAAK,CAACE,MAAM,CAAvBD,MAAM;EACd,IAAAE,SAAA,GAAwBd,QAAQ,CAAC,IAAI,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpBhB,SAAS,CAAC,YAAM;IACd,IAAMoB,SAAS;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAC5B,IAAI;UACF,IAAMC,KAAK,SAASlB,YAAY,CAACmB,OAAO,CAAC,OAAO,CAAC;UACjD,IAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,IAAI,EAAE;UAEzC,IAAMK,YAAY,GAAGH,SAAS,CAACI,IAAI,CAAC,UAACC,IAAI;YAAA,OAAKA,IAAI,CAACC,EAAE,KAAKlB,MAAM;UAAA,EAAC;UACjEM,OAAO,CAACS,YAAY,CAAC;QACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;QAC7D;MACF,CAAC;MAAA,gBAVKZ,SAASA,CAAA;QAAA,OAAAC,KAAA,CAAAa,KAAA,OAAAC,SAAA;MAAA;IAAA,GAUd;IAEDf,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,OACEJ,KAAA,CAACP,IAAI;IAACkC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BhC,IAAA,CAACJ,IAAI;MAACiC,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAkB,CAAM,CAAC,EACnDrB,IAAI,GACHT,KAAA,CAACP,IAAI;MAACkC,KAAK,EAAEC,MAAM,CAACI,WAAY;MAAAF,QAAA,GAC9BhC,IAAA,CAACJ,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACK,KAAM;QAAAH,QAAA,EAAC;MAAa,CAAM,CAAC,EAC/ChC,IAAA,CAACJ,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACM,IAAK;QAAAJ,QAAA,EAAErB,IAAI,CAACa;MAAE,CAAO,CAAC,EAC1CxB,IAAA,CAACJ,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACK,KAAM;QAAAH,QAAA,EAAC;MAAO,CAAM,CAAC,EACzChC,IAAA,CAACJ,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACM,IAAK;QAAAJ,QAAA,EAAErB,IAAI,CAACsB;MAAK,CAAO,CAAC,EAC7CjC,IAAA,CAACJ,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACK,KAAM;QAAAH,QAAA,EAAC;MAAU,CAAM,CAAC,EAC5ChC,IAAA,CAACJ,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACM,IAAK;QAAAJ,QAAA,EAAErB,IAAI,CAAC0B;MAAW,CAAO,CAAC,EACnDrC,IAAA,CAACJ,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACK,KAAM;QAAAH,QAAA,EAAC;MAAY,CAAM,CAAC,EAC9ChC,IAAA,CAACJ,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACM,IAAK;QAAAJ,QAAA,EACtB,IAAIM,IAAI,CAAC3B,IAAI,CAAC4B,IAAI,CAAC,CAACC,cAAc,CAAC;MAAC,CACjC,CAAC,EACPxC,IAAA,CAACJ,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACK,KAAM;QAAAH,QAAA,EAAC;MAAS,CAAM,CAAC,EAC3ChC,IAAA,CAACJ,IAAI;QAACiC,KAAK,EAAEC,MAAM,CAACM,IAAK;QAAAJ,QAAA,EAAErB,IAAI,CAAC8B;MAAM,CAAO,CAAC;IAAA,CAC1C,CAAC,GAEPzC,IAAA,CAACJ,IAAI;MAACiC,KAAK,EAAEC,MAAM,CAACY,MAAO;MAAAV,QAAA,EAAC;IAAkC,CAAM,CACrE;EAAA,CACG,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGjC,UAAU,CAAC8C,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDZ,KAAK,EAAE;IACLa,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDd,WAAW,EAAE;IACXe,eAAe,EAAE,OAAO;IACxBC,YAAY,EAAE,EAAE;IAChBL,OAAO,EAAE,EAAE;IACXM,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCC,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,CAAC;IACfT,YAAY,EAAE;EAChB,CAAC;EACDb,KAAK,EAAE;IACLY,UAAU,EAAE,MAAM;IAClBD,QAAQ,EAAE,EAAE;IACZE,YAAY,EAAE;EAChB,CAAC;EACDZ,IAAI,EAAE;IACJU,QAAQ,EAAE,EAAE;IACZE,YAAY,EAAE;EAChB,CAAC;EACDN,MAAM,EAAE;IACNI,QAAQ,EAAE,EAAE;IACZY,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAevD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}