{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { Button, Card, CheckBox } from \"@rneui/themed\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TaskCard = function TaskCard(_ref) {\n  var task = _ref.task,\n    onPress = _ref.onPress,\n    onPressEdit = _ref.onPressEdit,\n    onToggle = _ref.onToggle;\n  return _jsx(TouchableHighlight, {\n    onPress: onPress,\n    underlayColor: \"transparent\",\n    children: _jsxs(Card, {\n      style: styles.card,\n      children: [_jsx(Card.Title, {\n        style: styles.title,\n        children: task.title\n      }), _jsx(Card.Divider, {}), _jsx(Text, {\n        style: styles.description,\n        children: task.description\n      }), _jsxs(Text, {\n        style: styles.date,\n        children: [\"Data de T\\xE9rmino: \", new Date(task.date).toLocaleString()]\n      }), _jsxs(View, {\n        style: styles.footer,\n        children: [_jsx(Button, {\n          icon: _jsx(Icon, {\n            name: \"edit\",\n            color: \"#ffffff\"\n          }),\n          buttonStyle: styles.editButton,\n          title: \" EDITAR\",\n          onPress: onPressEdit\n        }), _jsx(CheckBox, _objectSpread(_objectSpread({\n          title: \"Conclu\\xEDda\"\n        }, task.status === \"realizada\" ? {\n          checked: true\n        } : {}), {}, {\n          onPress: onToggle\n        }))]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  card: {\n    marginBottom: 10\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  description: {\n    fontSize: 16,\n    marginBottom: 10,\n    color: \"#333\"\n  },\n  date: {\n    fontSize: 14,\n    color: \"#555\",\n    marginBottom: 5\n  },\n  footer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  editButton: {\n    backgroundColor: \"#b0b0b0\",\n    borderRadius: 5\n  }\n});\nexport default TaskCard;","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableHighlight","Button","Card","CheckBox","Icon","jsx","_jsx","jsxs","_jsxs","TaskCard","_ref","task","onPress","onPressEdit","onToggle","underlayColor","children","style","styles","card","Title","title","Divider","description","date","Date","toLocaleString","footer","icon","name","color","buttonStyle","editButton","_objectSpread","status","checked","create","marginBottom","fontSize","fontWeight","flexDirection","justifyContent","backgroundColor","borderRadius"],"sources":["C:/Users/sofia/react_async/src/components/TaskCard.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet, TouchableHighlight } from \"react-native\";\r\nimport { Button, Card, CheckBox } from \"@rneui/themed\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\n\r\nconst TaskCard = ({ task, onPress, onPressEdit, onToggle }) => {\r\n  return (\r\n    <TouchableHighlight onPress={onPress} underlayColor=\"transparent\">\r\n      <Card style={styles.card}>\r\n        <Card.Title style={styles.title}>{task.title}</Card.Title>\r\n        <Card.Divider />\r\n        <Text style={styles.description}>{task.description}</Text>\r\n        <Text style={styles.date}>\r\n          Data de Término: {new Date(task.date).toLocaleString()}\r\n        </Text>\r\n        <View style={styles.footer}>\r\n          <Button\r\n            icon={<Icon name=\"edit\" color=\"#ffffff\" />}\r\n            buttonStyle={styles.editButton}\r\n            title=\" EDITAR\"\r\n            onPress={onPressEdit}\r\n          />\r\n          <CheckBox\r\n            title=\"Concluída\"\r\n            {...(task.status === \"realizada\" ? { checked: true } : {}) }\r\n            onPress={onToggle}\r\n          />\r\n        </View>\r\n      </Card>\r\n    </TouchableHighlight>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    marginBottom: 10,\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  description: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n    color: \"#333\",\r\n  },\r\n  date: {\r\n    fontSize: 14,\r\n    color: \"#555\",\r\n    marginBottom: 5,\r\n  },\r\n  footer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  editButton: {\r\n    backgroundColor: \"#b0b0b0\",\r\n    borderRadius: 5,\r\n  },\r\n});\r\n\r\nexport default TaskCard;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,kBAAA;AAE1B,SAASC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,eAAe;AACtD,OAAOC,IAAI;AAA8C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAAiD;EAAA,IAA3CC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAEC,WAAW,GAAAH,IAAA,CAAXG,WAAW;IAAEC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;EACtD,OACER,IAAA,CAACN,kBAAkB;IAACY,OAAO,EAAEA,OAAQ;IAACG,aAAa,EAAC,aAAa;IAAAC,QAAA,EAC/DR,KAAA,CAACN,IAAI;MAACe,KAAK,EAAEC,MAAM,CAACC,IAAK;MAAAH,QAAA,GACvBV,IAAA,CAACJ,IAAI,CAACkB,KAAK;QAACH,KAAK,EAAEC,MAAM,CAACG,KAAM;QAAAL,QAAA,EAAEL,IAAI,CAACU;MAAK,CAAa,CAAC,EAC1Df,IAAA,CAACJ,IAAI,CAACoB,OAAO,IAAE,CAAC,EAChBhB,IAAA,CAACR,IAAI;QAACmB,KAAK,EAAEC,MAAM,CAACK,WAAY;QAAAP,QAAA,EAAEL,IAAI,CAACY;MAAW,CAAO,CAAC,EAC1Df,KAAA,CAACV,IAAI;QAACmB,KAAK,EAAEC,MAAM,CAACM,IAAK;QAAAR,QAAA,GAAC,sBACP,EAAC,IAAIS,IAAI,CAACd,IAAI,CAACa,IAAI,CAAC,CAACE,cAAc,CAAC,CAAC;MAAA,CAClD,CAAC,EACPlB,KAAA,CAACX,IAAI;QAACoB,KAAK,EAAEC,MAAM,CAACS,MAAO;QAAAX,QAAA,GACzBV,IAAA,CAACL,MAAM;UACL2B,IAAI,EAAEtB,IAAA,CAACF,IAAI;YAACyB,IAAI,EAAC,MAAM;YAACC,KAAK,EAAC;UAAS,CAAE,CAAE;UAC3CC,WAAW,EAAEb,MAAM,CAACc,UAAW;UAC/BX,KAAK,EAAC,SAAS;UACfT,OAAO,EAAEC;QAAY,CACtB,CAAC,EACFP,IAAA,CAACH,QAAQ,EAAA8B,aAAA,CAAAA,aAAA;UACPZ,KAAK,EAAC;QAAW,GACZV,IAAI,CAACuB,MAAM,KAAK,WAAW,GAAG;UAAEC,OAAO,EAAE;QAAK,CAAC,GAAG,CAAC,CAAC;UACzDvB,OAAO,EAAEE;QAAS,EACnB,CAAC;MAAA,CACE,CAAC;IAAA,CACH;EAAC,CACW,CAAC;AAEzB,CAAC;AAED,IAAMI,MAAM,GAAGnB,UAAU,CAACqC,MAAM,CAAC;EAC/BjB,IAAI,EAAE;IACJkB,YAAY,EAAE;EAChB,CAAC;EACDhB,KAAK,EAAE;IACLiB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDhB,WAAW,EAAE;IACXe,QAAQ,EAAE,EAAE;IACZD,YAAY,EAAE,EAAE;IAChBP,KAAK,EAAE;EACT,CAAC;EACDN,IAAI,EAAE;IACJc,QAAQ,EAAE,EAAE;IACZR,KAAK,EAAE,MAAM;IACbO,YAAY,EAAE;EAChB,CAAC;EACDV,MAAM,EAAE;IACNa,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDT,UAAU,EAAE;IACVU,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAelC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}