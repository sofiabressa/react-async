{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, Button } from \"@react-native-material/core\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport TaskCard from \"../components/TaskCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredTasks = _useState4[0],\n    setFilteredTasks = _useState4[1];\n  useEffect(function () {\n    var fetchTasks = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var storedTasks = yield AsyncStorage.getItem(\"tasks\");\n          if (storedTasks) {\n            var parsedTasks = JSON.parse(storedTasks);\n            setTasks(parsedTasks);\n          }\n        } catch (error) {\n          console.error(\"Erro ao buscar tarefas: \", error);\n        }\n      });\n      return function fetchTasks() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchTasks();\n  }, []);\n  useEffect(function () {\n    var filtered = tasks.reduce(function (result, task) {\n      if (!result[task.status]) {\n        result[task.status] = [];\n      }\n      result[task.status].push(task);\n      return result;\n    }, {});\n    var sections = Object.keys(filtered).map(function (status) {\n      return {\n        title: status,\n        data: filtered[status]\n      };\n    });\n    sections.sort(function (a, b) {\n      if (a.title === \"aberta\" && b.title === \"aberta\") {\n        var dateA = new Date(a.data[0].date).getTime();\n        var dateB = new Date(b.data[0].date).getTime();\n        return dateA - dateB;\n      }\n      return 0;\n    });\n    setFilteredTasks(sections);\n  }, [tasks]);\n  var goToTaskDetails = function goToTaskDetails(taskId) {\n    navigation.navigate(\"TaskDetails\", {\n      taskId: taskId\n    });\n  };\n  var handleTaskToggle = function handleTaskToggle(taskId) {\n    var updatedTasks = tasks.map(function (task) {\n      if (task.id === taskId) {\n        task.status = task.status === \"aberta\" ? \"realizada\" : \"aberta\";\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n    AsyncStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Lista de Tarefas\"\n    }), _jsx(SectionList, {\n      sections: filteredTasks,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(TaskCard, {\n          task: item,\n          onPress: function onPress() {\n            return goToTaskDetails(item.id);\n          },\n          onPressEdit: function onPressEdit() {\n            return navigation.navigate(\"EditTaskScreen\", {\n              taskId: item.id\n            });\n          },\n          onToggle: function onToggle() {\n            return handleTaskToggle(item.id);\n          }\n        });\n      },\n      renderSectionHeader: function renderSectionHeader(_ref4) {\n        var title = _ref4.section.title;\n        return _jsx(Text, {\n          style: styles.sectionHeader,\n          children: capitalize(title)\n        });\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: \"#f4f4f4\"\n  },\n  header: {\n    fontSize: 24,\n    marginBottom: 20,\n    fontWeight: \"bold\",\n    color: \"#333\",\n    textAlign: \"center\"\n  },\n  sectionHeader: {\n    backgroundColor: \"#009688\",\n    padding: 10,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"white\",\n    textAlign: \"center\"\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useEffect","useState","View","SectionList","StyleSheet","Text","Button","AsyncStorage","TaskCard","jsx","_jsx","jsxs","_jsxs","capitalize","string","charAt","toUpperCase","slice","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","filteredTasks","setFilteredTasks","fetchTasks","_ref2","_asyncToGenerator","storedTasks","getItem","parsedTasks","JSON","parse","error","console","apply","arguments","filtered","reduce","result","task","status","push","sections","Object","keys","map","title","data","sort","a","b","dateA","Date","date","getTime","dateB","goToTaskDetails","taskId","navigate","handleTaskToggle","updatedTasks","id","setItem","stringify","style","styles","container","children","header","keyExtractor","item","toString","renderItem","_ref3","onPress","onPressEdit","onToggle","renderSectionHeader","_ref4","section","sectionHeader","create","flex","padding","backgroundColor","fontSize","marginBottom","fontWeight","color","textAlign"],"sources":["C:/Users/sofia/react_async/src/screens/EditScreen.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, SectionList, StyleSheet } from \"react-native\";\r\nimport { Text, Button } from \"@react-native-material/core\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport TaskCard from \"../components/TaskCard\";\r\n\r\nfunction capitalize(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filteredTasks, setFilteredTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const storedTasks = await AsyncStorage.getItem(\"tasks\");\r\n        if (storedTasks) {\r\n          const parsedTasks = JSON.parse(storedTasks);\r\n          setTasks(parsedTasks);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar tarefas: \", error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = tasks.reduce((result, task) => {\r\n      if (!result[task.status]) {\r\n        result[task.status] = [];\r\n      }\r\n      result[task.status].push(task);\r\n      return result;\r\n    }, {});\r\n\r\n    const sections = Object.keys(filtered).map((status) => ({\r\n      title: status,\r\n      data: filtered[status],\r\n    }));\r\n\r\n    sections.sort((a, b) => {\r\n      if (a.title === \"aberta\" && b.title === \"aberta\") {\r\n        const dateA = new Date(a.data[0].date).getTime();\r\n        const dateB = new Date(b.data[0].date).getTime();\r\n        return dateA - dateB;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    setFilteredTasks(sections);\r\n  }, [tasks]);\r\n\r\n  const goToTaskDetails = (taskId) => {\r\n    navigation.navigate(\"TaskDetails\", { taskId });\r\n  };\r\n\r\n  const handleTaskToggle = (taskId) => {\r\n    const updatedTasks = tasks.map((task) => {\r\n      if (task.id === taskId) {\r\n        task.status = task.status === \"aberta\" ? \"realizada\" : \"aberta\";\r\n      }\r\n      return task;\r\n    });\r\n\r\n    setTasks(updatedTasks);\r\n    AsyncStorage.setItem(\"tasks\", JSON.stringify(updatedTasks));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Lista de Tarefas</Text>\r\n\r\n      <SectionList\r\n        sections={filteredTasks}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <TaskCard\r\n            task={item}\r\n            onPress={() => goToTaskDetails(item.id)}\r\n            onPressEdit={() =>\r\n              navigation.navigate(\"EditTaskScreen\", { taskId: item.id })\r\n            }\r\n            onToggle={() => handleTaskToggle(item.id)}\r\n          />\r\n        )}\r\n        renderSectionHeader={({ section: { title } }) => (\r\n          <Text style={styles.sectionHeader}>{capitalize(title)}</Text>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: \"#f4f4f4\", // Cor de fundo\r\n  },\r\n  header: {\r\n    fontSize: 24,\r\n    marginBottom: 20,\r\n    fontWeight: \"bold\", // Negrito\r\n    color: \"#333\", // Cor do texto\r\n    textAlign: \"center\", // Alinhamento horizontal\r\n  },\r\n  sectionHeader: {\r\n    backgroundColor: \"#009688\", // Cor de fundo do cabeçalho da seção\r\n    padding: 10,\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    color: \"white\", // Cor do texto\r\n    textAlign: \"center\", // Alinhamento horizontal\r\n  },\r\n});\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}